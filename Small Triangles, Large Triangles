#include <stdio.h>
#include <stdlib.h>
#include <math.h>

struct triangle
{
	int a;
	int b;
	int c;
};

typedef struct triangle triangle;
void sort_by_area(triangle* tr, int n) {
    float x[n];
    float d,e,f,g=0;
    for (int i=0;i<n;i++){
        //printf("%f",3/2);
        float p=(float)(tr[i].a + tr[i].b + tr[i].c)/2;
        x[i]=sqrt(p*(p-tr[i].a)*(p-tr[i].b)*(p-tr[i].c));
        //printf("%f",p);
        //printf(",");
        //printf("%f",x[i]);
        //printf("\n");
}
    for(int j=0;j<n-1;j++){
        for(int k=0;k<n-1;k++){
            if (x[k]>x[k+1]){
                g=x[k];
                x[k]=x[k+1];
                x[k+1]=g;//SWAPPING AREAS
                d=tr[k].a;
                e=tr[k].b;
                f=tr[k].c;//COPYING TO TEMP
                tr[k].a=tr[k+1].a;
                tr[k].b=tr[k+1].b;
                tr[k].c=tr[k+1].c;//EXCHANGE
                tr[k+1].a=d;
                tr[k+1].b=e;
                tr[k+1].c=f;//FINISHING
            }
            else{
                continue;
            }
        }
    }
    
}
int main()
{
	int n;
	scanf("%d", &n);
	triangle *tr = malloc(n * sizeof(triangle));
	for (int i = 0; i < n; i++) {
		scanf("%d%d%d", &tr[i].a, &tr[i].b, &tr[i].c);
	}
	sort_by_area(tr, n);
	for (int i = 0; i < n; i++) {
		printf("%d %d %d\n", tr[i].a, tr[i].b, tr[i].c);
	}
	return 0;
}
